<h1>Using code in prototyping: a short reflection</h1>

 <p> In this small coding project, the goal was to create a webpage where you could easily change the background colour on all devices visiting the webpage. This functionality was created by using a websocket in combination with some simple HTML and Javascript for the setup of the page as a whole. The purpose of this webpage was to imitate the possible colour changing ability of a Philips Hue lamp, or any other smart lightbulb with the same capabilities, so that it could aid in the testing of connectivity possibilities between the lamp and a phone. This was done by exploring how the change of colour in the “lamp” might be perceived by a person entering a room where a smart lamp is located. By placing a thin lamp shade made from paper on top of a screen with this webpage on it, the “lamp” could be controlled remotely from a different device, such as a phone in the hands of one in the design team.</p>
 
 <p>
  The remote controlling capability that is enabled in this prototype thanks to the technique of websockets is good proof of how coding can be an aid in design processes. In this case, it enables us as designers to get closer to the real deal of how the actual smart light would work, even when we didn’t have a lamp to work with. Since the main focus for most of our tests in this design process was how the connectivity between lamp and phone was best portrayed, having the lamp look exactly like a real smart lamp was not necessary – but we needed to imitate its function. Using code was an excellent way to copy a particular part of the lamps functionality.</p>
  
  <p>This being said, a lot of time was put into this one single prototype – and the remote control functionality we wanted could be achieved in other ways. In our actual tests we did not use this prototype, but another, simpler version of a webpage where the websocket was completely excluded and only some very basic HTML, CSS and Javascript was needed (the color change was simply made by a quick change in the code that controlled a colour animation as a background). The making of the websocket prototype webpage gave a sense of real control from a remote device, but even if that’s a nice feeling to have as a designer in the testing situation, the time we had to put into it greatly brought down the effectiveness of it. In conclusion, the use of more advanced code (in relation to a designer’s coding skills) might turn out to be a real time thief for a prototype that could be more easily made by using simpler code in a different way. The prototype that the group ended up using gave a good run for its money in terms of imitating the interactivity and functionality of the lamp, without needing to much time production wise. Using code in a prototyping process can definitely be a great aid for showcasing certain qualities – one can only come so far with analogue materials – but as always, it is necessary to bring time and energy needed for production into the equation and ask the question: can the same effect be achieved with less time consumption to get there?
</p>
